---
- hosts: rocket
  user: vagrant
  become: yes
  connection: ssh
  tasks:
  - name: update the system
    yum:
      name: '*'
      state: latest
  - name: download unzip
    yum:
      name: unzip
      state: latest
  - name: Download the latest version of rocket chat
    command: curl -L https://releases.rocket.chat/latest/download -o /tmp/rocket.chat.tgz
    become: yes
    become_user: vagrant
  - name: Extract rocket.chat.tgz into /tmp
    command: tar -xzf /tmp/rocket.chat.tgz -C /tmp
    become: yes
    become_user: vagrant
  - name: doing the npm install
    command: cd /tmp/bundle/programs/server && npm install
    become: yes
    become_user: vagrant
  - name: check that the file exists
    stat:
      path: /opt/Rocket.Chat
    register: stat_res
    become: yes
    become_user: vagrant
  - name: Delete rocketchat if exits
    file: 
      path: /opt/Rocket.Chat
      state: absent
    become: yes
    become_user: vagrant     
  - name: List files /tmp/bundle
    find:
      path: /tmp/bundle
      recurse: yes
      file_type: any
    register: find_result
  - name: Create the directories
    file:
      path: "{{ item.path | regex_replace('/tmp/bundle','/opt/Rocket.Chat') }}"
      state: directory
      mode: "{{ item.mode }}"
    with_items:
      - "{{ find_result.files }}"
    when:
      - item.isdir
  - name: Copy the files
    copy:
      src: "{{ item.path }}"
      dest: "{{ item.path | regex_replace('/tmp/bundle','/opt/Rocket.Chat') }}"
      remote_src: yes
      mode: "{{ item.mode }}"
    with_items:
      - "{{ find_result.files }}"
    when:
      - item.isdir == False    
    #- name: Move Rocket.Chat from /tmp to /opt
    #  shell: mv /tmp/bundle /opt/Rocket.Chat
    #  become: yes
    #  become_user: vagrant
    #- name: add the rocket chat user
    #user:
    #  name: rocketchat 
    #  create_home: no
    #  password_lock: yes
  - name: changed ownership of the opt/rocketchat
    command: chown -R vagrant:vagrant /opt/Rocket.Chat
  - name: creates the service file
    shell: echo -e "[Unit]\nDescription=The Rocket.Chat server\nAfter=network.target remote-fs.target nss-lookup.target nginx.target mongod.target\n[Service]\nExecStart=/usr/local/bin/node /opt/Rocket.Chat/main.js\nStandardOutput=syslog\nStandardError=syslog\nSyslogIdentifier=rocketchat\nUser=rocketchat\nEnvironment=LD_PRELOAD=/opt/Rocket.Chat/programs/server/npm/node_modules/sharp/vendor/lib/libz.so NODE_ENV=production MONGO_URL=mongodb://localhost:27017/rocketchat ROOT_URL=http://10.0.0.215:3000/ PORT=3000\n[Install]\nWantedBy=multi-user.target" >> /usr/lib/systemd/system/rocketchat.service
    become: yes
    become_user: vagrant
  - name: Enable service mongo
    service:
      name: mongod 
      enabled: yes
    become: yes
    become_user: vagrant
  - name: Start service mongod, if not started
    service:
      name: mongod
      state: started
    become: yes
    become_user: vagrant
  - name: Enables service rocket if not enabled
    service:
      name: rocketchat 
      enabled: yes
    become: yes
    become_user: vagrant
  - name: Starts rocketchat if not started
    service:
      name: rocketchat
      state: started
    become: yes
    become_user: vagrant
  - name: allow port 3000 permanently to the rule
    firewalld:
      port: 3000/tcp
      permanent: yes
      state: enabled
    become: yes
    become_user: vagrant
  - name: reload firewalld for rules to take effect
    service:
      name: firewalld
      state: reloaded
    become: yes
    become_user: vagrant
  - name: Restart damien
    become: yes
    become_user: vagrant
    command: systemctl daemon-reload
